// gradle build -Pprofile=real (or real, demo)
final String DEFAULT_PROFILE = 'local'

buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
		lombokVersion = '1.18.4'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.gaia3d'
version = '0.0.1-SNAPSHOT'

bootJar {
	// 이 옵션을 주면 ./xxx.jar로 바로 실행 할 수 있다는데 리눅스에서 테스트 해 봐야 함
	//lanunchScript()
	mainClassName = 'com.gaia3d.Mago3dConverterApplication'
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    // gralde 5.0 lombok error
    //options.compilerArgs += ["-proc:none"]
}
compileJava.options.encoding = 'UTF-8'

repositories {
	mavenCentral()
}

test {
	ignoreFailures = true
}

sourceSets {
	main {
		resources {
			if (!project.hasProperty('profile') || !profile) {
				println " ========== > default profile is local. "
				ext.profile = DEFAULT_PROFILE
			}
			
			if (profile == 'real') {
				println " ===========> profile file is ${profile}"
				println " ===========> copy from src/main/resources/real to src/main/resources"
				
				copy {
					from("src/main/resources/real") {
						//exclude 'logback.xml'
						include 'application.properties'
						include 'mago3d.properties'
						include 'logback-spring.xml'
					}
					into "src/main/resources"
				}
			} else {
				println " ===========> profile file is ${profile}"
				//srcDir "src/main/resources"
				exclude "**/real/*"
			}
		}
	}
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
	compile('org.springframework.boot:spring-boot-starter-amqp')
	compile('commons-codec:commons-codec:1.11')
	compile 'org.apache.commons:commons-exec:1.3'
	
	annotationProcessor("org.projectlombok:lombok:$lombokVersion")
	compileOnly("org.projectlombok:lombok:$lombokVersion")
	testAnnotationProcessor("org.projectlombok:lombok:$lombokVersion")
	testCompileOnly("org.projectlombok:lombok:$lombokVersion")	
	//compileOnly('org.projectlombok:lombok:1.18.2')
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
	
	runtime('org.springframework.boot:spring-boot-devtools')
}
